version: 0.2
phases:
  install:
    commands:
      - echo "Installing dependencies..."
      - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
      - chmod 700 get_helm.sh
      - ./get_helm.sh
      - echo "Installing kubectl..."
      - curl -LO "https://dl.k8s.io/release/v1.27.2/bin/linux/amd64/kubectl"
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl
      - export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - source ~/.bashrc
      - echo "Check kubectl version..."
      - kubectl version --client
 
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - REPOSITORY_URI=$REPOSITORY_URI  #Define ECR repository URI
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - BRANCH_NAME=$(echo $CODEBUILD_WEBHOOK_HEAD_REF | awk -F'/' '{print $3}')
      - echo $BRANCH_NAME
      - echo $IMAGE_TAG
      - echo $COMMIT_HASH
 
  build:
    commands:
      - aws ssm get-parameter --name "schedulers" --with-decryption --query "Parameter.Value" --output text > env.json
      # - aws secretsmanager get-secret-value --secret-id ${HES_SCHEDULER} --query SecretString --output text > env.json
      - jq -r 'to_entries | .[] | "\(.key)=\(.value|tostring)"' env.json > .env  
      - cat .env
     # - mv .env app/.env
      - echo "Build started on $(date)"
      - echo "Building Docker image for scheduler.."
      - docker build -t $REPOSITORY_URI/abc:latest -f ./docker/schedulers/Dockerfile .
      - echo "Tagging Docker image..."
      - docker tag $REPOSITORY_URI/abc:latest $REPOSITORY_URI/abc:$IMAGE_TAG
      - echo "Docker build and tagging completed."

      - export KUBECONFIG=$HOME/.kube/config
      - CREDENTIALS=$(aws sts assume-role --role-arn arn:aws:iam::19771:role/assume-role-codebuild --role-session-name eks-codebuild --duration-seconds 900) && export AWS_ACCESS_KEY_ID=$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId') && export AWS_SECRET_ACCESS_KEY=$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey') && export AWS_SESSION_TOKEN=$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')
      - echo "Update Kube Config configuration"
      - aws eks update-kubeconfig --name $CLUSTER_NAME --region ap-south-1
      - echo "Deploying to EKS..."
      - kubectl apply -f value.yaml -n namespace
      - echo "Deployment complete."
      - kubectl get all -n namespace