# 2. *Adding the Kubernetes Dashboard Helm Repository:*
# Add the repository and verify it:   
#      helm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/
#      helm repo list    
# 
#3. *Installing Kubernetes Dashboard Using Helm:*
#Install it in the `kubernetes-dashboard` namespace:     
     # helm upgrade --install kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard --create-namespace --namespace kubernetes-dashboard
     # kubectl get pods,svc -n kubernetes-dashboard  

# [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String((kubectl -n kube-system get secret admin-user-manual-token -o jsonpath="{.data.token}")))
# [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String((kubectl -n kubernetes-dashboard get secret readonly-user-manual-token -o jsonpath="{.data.token}")))



apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: readonly-user
  namespace: kubernetes-dashboard
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: readonly-user
rules:
  - apiGroups: [""]
    resources: ["*"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps", "batch", "extensions", "autoscaling", "networking.k8s.io", "rbac.authorization.k8s.io", "policy", "storage.k8s.io", "admissionregistration.k8s.io", "apiextensions.k8s.io", "apiregistration.k8s.io", "coordination.k8s.io", "scheduling.k8s.io", "node.k8s.io", "discovery.k8s.io", "events.k8s.io", "flowcontrol.apiserver.k8s.io", "authentication.k8s.io", "authorization.k8s.io"]
    resources: ["*"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: readonly-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: readonly-user
subjects:
- kind: ServiceAccount
  name: readonly-user
  namespace: kubernetes-dashboard
