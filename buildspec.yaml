version: 0.2
phases:
  install:
    commands:
      - echo "Installing dependencies..."
      - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
      - chmod 700 get_helm.sh
      - ./get_helm.sh
      - echo "Installing kubectl..."
      - curl -LO "https://dl.k8s.io/release/v1.27.2/bin/linux/arm64/kubectl"
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl
      - export PATH=$HOME/bin:$PATH
      - echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc
      - source ~/.bashrc
      - kubectl version --short --client

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - REPOSITORY_URI=$REPOSITORY_URI/test  #Define ECR repository URI
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - BRANCH_NAME=$(echo $CODEBUILD_WEBHOOK_HEAD_REF | awk -F'/' '{print $3}')
      - echo $BRANCH_NAME
      - echo $IMAGE_TAG
      - echo $COMMIT_HASH

  build:
    commands:
      - aws secretsmanager get-secret-value --secret-id ${test} --query SecretString --output text > env.json
      - jq -r 'to_entries | .[] | "\(.key)=\(.value|tostring)"' env.json > .env
      - cat .env
      - echo Build started on `date`
      - echo $CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest  ./
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - echo Docker build and tagging completed on `date`

  post_build:
    commands:
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Assuming role for EKS deployment..."
      - CREDENTIALS=$(aws sts assume-role --role-arn arn:aws:iam::2867:role/assume-role-codebuild --role-session-name eks-codebuild --duration-seconds 900) && export AWS_ACCESS_KEY_ID=$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId') && export AWS_SECRET_ACCESS_KEY=$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey') && export AWS_SESSION_TOKEN=$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')
      - export KUBECONFIG=$HOME/.kube/config
      - echo "Updating kubeconfig..."
      - aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_DEFAULT_REGION
      - echo "Deploying to EKS using Helm..."
      - helm upgrade --install release_name ./helm-chart/ -f ./helm-chart/values.yaml --set image.tag=latest --namespace name_space
      - echo "Deployment complete."
      - kubectl get all -n name_space
